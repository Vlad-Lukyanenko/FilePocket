@page "/sign-up"
@using FilePocket.BlazorClient.Services.Authentication.Models

<section>
    <div class="container">
        <div class="card border-light-subtle shadow-sm">
            <div class="row g-0 justify-content-around">
                <!-- Image Column -->
                <div class="col-12 col-md-6">
                    <img class="img-fluid rounded-start w-90 h-90 ps-1 pt-5" loading="lazy" src="./assets/img/sign-up.png" alt="Sign-up illustration">
                </div>

                <!-- Form Column -->
                <div class="col-12 col-md-4">
                    <div class="card-body p-3 p-md-4 p-xl-5">
                        <div class="row">
                            <div class="col-12">
                                <div class="mb-5">
                                    <h3>Sign-up</h3>
                                </div>
                            </div>
                        </div>

                        <!-- Sign-up Form -->
                        <EditForm Model="_registrationRequest" OnValidSubmit="HandleValidSubmit" Context="formContext">
                            <DataAnnotationsValidator />
                            @* <ValidationSummary /> *@

                            @foreach (var error in _errors)
                            {
                                <p class="text-danger">@error</p>
                            }

                            <div class="row gy-3 gy-md-4 overflow-hidden">
                                <!-- Email Input -->
                                <div class="col-12 text-start">
                                    <label for="email" class="form-label">
                                        Email 
                                        @if (showEmailError)
                                        {
                                            <span class="text-danger">*</span>
                                        }
                                    </label>
                                    <InputText @bind-Value="_registrationRequest.Email" 
                                        type="email" 
                                        class="form-control" 
                                        placeholder="name@example.com" required
                                        id="email" 
                                        @onblur="ValidateEmail"
                                    />
                                    <ValidationMessage For="() => _registrationRequest.Email" class="text-danger" />
                                </div>
                                <!-- Password Input -->
                                <div class="col-12 text-start">
                                    <label for="password" class="form-label">
                                       Password
                                        @if (showPasswordError)
                                        {
                                            <span class="text-danger">*</span>
                                        }
                                    </label>
                                    <div class="input-group">
                                        <InputText @bind-Value="_registrationRequest.Password" 
                                        type="@passwordInputType" 
                                        class="form-control" 
                                        id="password" required
                                        @onblur="ValidatePassword"
                                        />
                                        
                                        <button class="btn btn-outline-secondary" type="button" @onclick="TogglePassword"
                                        style="border: var(--bs-border-width, 1px) solid var(--bs-border-color, #6c757d);">
                                            <i class="@passwordIcon"></i>
                                        </button>
                                    </div>
                                    
                                    <ValidationMessage For="() => _registrationRequest.Password" class="text-danger" />
                                </div>
                                <!-- Confirm Password Input -->
                                <div class="col-12 text-start">
                                    <label for="confirmPassword" class="form-label">
                                        Confirm password 
                                        @if (showPasswordError)
                                        {
                                            <span class="text-danger">*</span>
                                        }
                                    </label>
                                    <div class="input-group">
                                        <InputText @bind-Value="_registrationRequest.ConfirmPassword" 
                                            type="@confirmPasswordInputType" 
                                            class="form-control" 
                                            id="confirmPassword" required
                                            @onblur="ValidateConfirmPassword"
                                        />
                                         <button class="btn btn-outline-secondary" type="button" @onclick="ToggleConfirmPassword"
                                        style="border: var(--bs-border-width, 1px) solid var(--bs-border-color, #6c757d);">
                                            <i class="@confirmPasswordIcon"></i>
                                        </button>
                                    </div>
                                    
                                    <ValidationMessage For="() => _registrationRequest.ConfirmPassword" class="text-danger" />
                                </div>

                                <!-- Submit Button -->
                                <div class="col-12">
                                    <div class="d-grid">
                                        <button class="btn btn-primary btn-lg" type="submit">Sign-up now</button>
                                    </div>
                                </div>
                            </div>
                        </EditForm>

                        <!-- Additional Links -->
                        <div class="row">
                            <div class="col-12">
                                <hr class="mt-4 mb-2 border-secondary-subtle">
                                <div class="d-flex gap-2 gap-md-4 flex-column flex-md-row justify-content-md-end">
                                    <label>Already have an account?</label>
                                    <a href="/sign-in" class="link-secondary text-decoration-none">Sign-in</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    private bool showEmailError = false;
    private bool showPasswordError = false;
    private bool showConfirmPasswordError = false;
    private bool isPasswordVisible = false;
    private bool isConfirmPasswordVisible = false;
    private string passwordInputType = "password";
    private string confirmPasswordInputType = "password";
    private string passwordIcon = "bi bi-eye";
    private string confirmPasswordIcon = "bi bi-eye";

    private void ValidateEmail()
    {
        showEmailError = string.IsNullOrWhiteSpace(_registrationRequest.Email);
    }

    private void ValidatePassword()
    {
        showPasswordError = string.IsNullOrWhiteSpace(_registrationRequest.Password);
    }

    private void ValidateConfirmPassword()
    {
        showConfirmPasswordError = string.IsNullOrWhiteSpace(_registrationRequest.ConfirmPassword);
    }

    private void TogglePassword()
    {
        isPasswordVisible = !isPasswordVisible;
        passwordInputType = isPasswordVisible ? "text" : "password";
        passwordIcon = isPasswordVisible ? "bi bi-eye-slash" : "bi bi-eye";
    }

    private void ToggleConfirmPassword()
    {
        isConfirmPasswordVisible = !isConfirmPasswordVisible;
        confirmPasswordInputType = isConfirmPasswordVisible ? "text" : "password";
        confirmPasswordIcon = isConfirmPasswordVisible ? "bi bi-eye-slash" : "bi bi-eye";
    }
}

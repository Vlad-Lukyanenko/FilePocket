@using FilePocket.BlazorClient.Features
@using FilePocket.BlazorClient.Features.Files.Models
@using FilePocket.BlazorClient.Features.Users.Requests
@using FilePocket.BlazorClient.Features.Users.Models
@using FilePocket.BlazorClient.Helpers
@using Microsoft.AspNetCore.Components.Authorization
@using FilePocket.BlazorClient.MyComponents

@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject NavigationHistoryService NavigationHistory
@inject IJSRuntime JS
@inject FilePocketApiClient ApiClient
@inject AuthenticationStateProvider AuthenticationStateProvider

@page "/storage"

<PageTitle>File Pocket Application</PageTitle>

<div class="d-flex" style="height: 100vh">
    <AuthorizeView>
        <Authorized>
        
            <!-- Sidebar Menu Desktop-->
            <aside class="col-2 d-none d-md-block p-4">

                <!-- Brand Logo and Name -->
                <a class="fw-bold main-text-header d-flex align-items-center text-white text-decoration-none" href="#">
                    <img src="./assets/img/logo.png" alt="Logo" width="50" height="50" class="d-inline-block align-text-top me-2">
                    File Pocket
                </a>

                <ul class="nav nav-pills d-flex flex-row flex-md-column justify-content-start overflow-auto mt-4" id="menu">
                    <li class="nav-item flex-fill flex-md-grow-0">
                        <a href="#" class="nav-link text-dark px-2 @(IsActive("#"))">
                            <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                                <i class="fs-4 bi-house"></i>
                                <span class="ms-2 d-none d-md-inline">Home</span>
                            </div>

                        </a>
                    </li>
                    <li class="nav-item flex-fill flex-md-grow-0">
                            <a href="/files" class="nav-link text-dark px-2 @(IsActive("/files"))">
                                <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                                    <i class="fs-4 bi-file-earmark-medical"></i>
                                    <span class="ms-2 d-none d-md-inline">Files</span>
                                </div>
                            </a>
                    </li>

                    <li class="nav-item flex-fill flex-md-grow-0">
                        <a href="/bookmarks" class="nav-link text-dark px-2 @(IsActive("/bookmarks"))">
                            <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                                <i class="fs-4 bi-bookmarks"></i>
                                <span class="ms-2 d-none d-md-inline">Bookmarks</span>
                            </div>
                        </a>
                    </li>

                    <li class="nav-item flex-fill flex-md-grow-0">
                        <a href="/files/shared" class="nav-link text-dark px-2 @(IsActive("/files/shared"))">
                            <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                                <i class="fs-4 bi-share"></i>
                                <span class="ms-2 d-none d-md-inline">Shared</span>
                            </div>
                        </a>
                    </li>
                        
                    <li class="nav-item flex-fill flex-md-grow-0">
                        <a href="/notes" class="nav-link text-dark px-2 @(IsActive("/notes"))">
                            <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                                <i class="fs-4 bi bi-pencil-square"></i>
                                <span class="ms-2 d-none d-md-inline">Notes</span>
                            </div>
                        </a>
                    </li>

                    <li class="nav-item flex-fill flex-md-grow-0">
                        <a href="/profile" class="nav-link text-dark px-2 @(IsActive("/profile"))">
                            <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                                <i class="fs-4 bi bi-person-square"></i>
                                <span class="ms-2 d-none d-md-inline">Profile</span>
                            </div>
                        </a>
                    </li>
                        
                    <li class="nav-item flex-fill flex-md-grow-0">
                        <a href="/settings" class="nav-link text-dark px-2 @(IsActive("/settings"))">
                            <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                                <i class="fs-4 bi bi-gear"></i>
                                <span class="ms-2 d-none d-md-inline">Settings</span>
                            </div>
                        </a>
                    </li>
                    <li class="nav-item flex-fill flex-md-grow-0">
                        <a href="/trash" class="nav-link text-dark px-2 @(IsActive("/trash"))">
                            <div class="d-flex align-items-center justify-content-center justify-content-md-start">
                                <i class="fs-4 bi bi-trash"></i>
                                <span class="ms-2 d-none d-md-inline">Recycle Bin</span>
                            </div>
                        </a>
                    </li>
                </ul>
            </aside>
            <!-- Menu for Mobile -->
            <MobileMenu />
            

            

            <div class="col container-fluid flex-grow-1 overflow-auto p-4">
                <!-- Navbar -->
                <header class="position-relative mb-2 navbar navbar-expand-md w-100 p-2">
                    <div class="d-flex justify-content-end align-items-center w-100">

                        <!-- Collapsible Content -->
                        <div class="collapse navbar-collapse">
                            <div class="d-flex flex-column flex-md-row align-items-center ms-auto gap-3">
                                <!-- Search Form -->
                                <form class="d-flex" role="search">
                                    <div class="search-container">
                                        <input class="search-box" type="text" />
                                        <button class="search-button">
                                            <i class="fas fa-search" style="color:rgba(65, 44, 168, 1)"></i>
                                        </button>
                                    </div>
                                </form>

                            </div>

                        </div>

                        <!-- Mobile Header -->
                        <div class="d-flex justify-content-between align-items-center w-100 d-md-none">
                            <a class="fw-bold main-text-header d-flex align-items-center text-white text-decoration-none" href="#">
                                <img src="./assets/img/logo.png" alt="Logo" width="50" height="50" class="d-inline-block align-text-top me-2">
                                File Pocket
                            </a>

                            <div class="d-flex justify-content-between align-items-center ">
                                <form class="d-flex" role="search">
                                    <div class="search-container">
                                        <input class="search-box" type="text" />
                                        <button class="search-button">
                                            <i class="fas fa-search" style="color:rgba(65, 44, 168, 1)"></i>
                                        </button>
                                    </div>
                                </form>

                                <button class="btn-menu" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasMenu">
                                    <span class="navbar-toggler-icon"></span>
                                </button>
                            </div>

                        </div>

                    </div>
                </header>

                <!-- Main Content Area -->
                <main class="w-100 p-2">
                    @Body
                </main>

            </div>


            <!-- Right Offcanvas Menu -->
            <div class="offcanvasMenuRight p-3">
                <!-- Open the Right offcanvas Menu -->
                <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#rightOffcanvasMenu">
                    <img src="./assets/img/menu.svg" alt="menu" width="20" height="20" class="d-inline-block">
                </button>


                <div class="offcanvas offcanvas-end" tabindex="-1" id="rightOffcanvasMenu">
                    <div class="offcanvas-header">
                        <button type="button" class="btn-close btn-close-white text-reset" data-bs-dismiss="offcanvas"></button>
                    </div>
                    
                    <div class="offcanvas-scrollable">
                        @* <div class="offcanvas-body"> *@
                    
                        <div class="controls-container">
                            <!-- Signing In User Info Button -->
                            <div class="d-flex justify-content-center align-items-center">
                                <div class="d-flex align-items-center flex-column">
                                    <img class="rounded-circle avatar-image" 
                                            src="@(_icon is null ? "../assets/img/man.png" : $"data:image/jpeg;base64,{_icon}")" 
                                            alt="userPicture" 
                                            @onclick="NavigateToProfile" 
                                    />
    

                                    <div class="d-flex align-items-center flex-column">
                                        <span>@_user?.Email</span>
                                        <h5 class="card-title">
                                            @GetDisplayedName()
                                        </h5>
                                    </div>
                                </div>

                            </div>
                        </div>
                    

                    <!--  doughnut chart -->
                    <div class="text-white p-4">
                        <canvas id="storageChart"></canvas>

                        <h5 class="text-center mt-2">@(Math.Round(_storageConsumption.Total/1000)) GB</h5>
                        <p class="text-center text-white" style="margin-bottom: 0px">@(_occupiedStorageSpacePercentage)%</p>

                        <div class="progressBar-body">
                            <div class="progressBar-occupied" style="width:@(_occupiedStorageSpacePercentage)%"></div>
                        </div>
                        @if (_storageConsumption.Used<100)
                        {
                            <p class="text-center text-white">@(Math.Round((_storageConsumption.Used), 0)) MB of @(Math.Round((_storageConsumption.Total/1000), 2)) GB used</p>
                        }
                        else
                        {
                            <p class="text-center text-white">@(Math.Round((_storageConsumption.Used/1000), 2)) GB of @(Math.Round((_storageConsumption.Total/1000), 2)) GB used</p>
                        }

                        <div class="mt-3">
                            @foreach (var item in StorageItems)
                            {
                                <div class="d-flex align-items-center mb-2">
                                    <div class="icon-box" style="background-color:@item.Color; 
                                                                width:24px; 
                                                                text-align:center;
                                                                border-radius:3px">
                                        <i class="@item.Icon"></i>
                                    </div>
                                    <span class="ms-2 flex-grow-1">@item.Name</span>
                                    @if(item.Size < 100)
                                    {
                                        <span class="text-white">@item.Size MB</span>
                                    }
                                    else
                                    {
                                        <span class="text-white">@(Math.Round((item.Size/1000), 2)) GB</span>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div class="d-flex flex-column p-3">
                        <a href="/support" class="link text-white @(IsActive("/support"))" @onclick='() => CloseOffcanvasAndNavigate("/support")'>
                            <i class="bi bi-question-circle"></i><span class="ms-2">Help &amp; Support</span>
                        </a>

                        <a href="/logout" class="link text-white">
                            <i class="bi bi-box-arrow-right"></i> <span class="ms-2">Logout</span>
                        </a>
                    </div>

                    </div>

                </div>   

            </div>   
        </Authorized>


        <NotAuthorized>
            <section class="col-12 mt-3 text-center pt-5 pb-4">
                <div class="mx-auto d-block">
                    <a href="#" class="top-header-link">File Pocket</a>
                </div>
                <div class="mt-3">
                    @Body
                </div>
            </section>
        </NotAuthorized>
    </AuthorizeView>
</div>



@code {

    private async Task ShowRightOffcanvas()
    {
        await JS.InvokeVoidAsync("openRightOffcanvasMenu");
    }


    private List<StorageItem> StorageItems = new()
    {
        new StorageItem("Documents", 0.0, "#E9BE26", "bi bi-folder"),
        new StorageItem("Books", 0.0, "#699CFF", "bi bi-book"),
        new StorageItem("Music", 0.0, "#47A3BC", "bi bi-file-music"),
        new StorageItem("Pictures", 0.0, "#F7B169", "bi bi-image"),
        new StorageItem("Videos", 0.0, "#AC91DA", "bi bi-film"),
        new StorageItem("Notes", 0.0, "#FD7C9B", "bi bi-pencil-square"),
        new StorageItem("Other", 0.0, "#88BFDE", "bi bi-file-earmark"),
    };

    private class StorageItem
    {
        public string Name { get; }
        public double Size { get; set; }
        public string Color { get; }
        public string Icon { get; }

        public StorageItem(string name, double size, string color, string icon)
        {
            Name = name;
            Size = size;
            Color = color;
            Icon = icon;
        }
    }

} 

<script>

    function closeOffcanvasMenu() {
        const offcanvasMenu = document.getElementById('offcanvasMenu');
        if (offcanvasMenu) {
            const bsOffcanvas = bootstrap.Offcanvas.getInstance(offcanvasMenu);
            if (bsOffcanvas) {
                bsOffcanvas.hide();
            }
        }
    }

    function openRightOffcanvasMenu() {
    const offcanvasMenu = document.getElementById('rightOffcanvasMenu');

    if (!offcanvasMenu) {
        @* console.error("Элемент #rightOffcanvasMenu не найден!"); *@
        return;
    }

    const bsOffcanvas = new bootstrap.Offcanvas(offcanvasMenu);
    bsOffcanvas.show();
    }
    
    window.closeOffcanvasMenu = closeOffcanvasMenu;
    window.openRightOffcanvasMenu = openRightOffcanvasMenu;


    function renderStorageChart(documentSize, booksSize, musicSize, picturesSize, videosSize, notesSize, otherSize) {
    console.log("renderStorageChart() вызван!");

    var ctx = document.getElementById("storageChart");
    if (!ctx) {
        console.error("Canvas не найден!");
        return;
    }

    ctx = ctx.getContext("2d");

    
    new Chart(ctx, {
        type: "doughnut",
        data: {
            labels: ["Documents", "Books", "Music", "Pictures", "Videos", "Notes", "Other"],
            datasets: [{
                data: [documentSize, booksSize, musicSize, picturesSize, videosSize, notesSize, otherSize],
                backgroundColor: ["#E9BE26", "#699CFF", "#47A3BC", "#F7B169", "#AC91DA", "#FD7C9B", "#88BFDE"],
                borderWidth: 0
            }]
        },
        options: {
            responsive: false,
            cutout: "70%",
            plugins: {
                legend: { display: false }
            }
        }
    });
    }
    
    function destroyStorageChart(){
        let chartStatus = Chart.getChart("storageChart");
        if (chartStatus != undefined) {
            chartStatus.destroy();
        }
    }

</Script>
